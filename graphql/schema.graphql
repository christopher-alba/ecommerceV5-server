type Query {
  product(id: ID!): Product!
  products: [Product!]!
  me: User
}
type Mutation {
  createProduct(product: createProductInput!): Product!
  updateProduct(product: updateProductInput!): Product!
  deleteProduct(id: ID!): ID!
  register(
    username: String!
    password: String!
    permission: PermissionType!
  ): User
  login(username: String!, password: String!): User
}
type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  images: [String!]!
  views: Int!
  orientation: Orientation!
  clothingType: ClothingType!
  sizes: ClothingSizes!
}
type User {
  username: String!
  password: String!
  token: String
  permission: PermissionType
}

input createProductInput {
  name: String!
  price: Float!
  description: String!
  images: [ProductImages!]!
  sizes: [ProductSizes!]!
  orientation: Orientation!
  clothingType: ClothingType!
}

input updateProductInput {
  id: ID!
  name: String!
  price: Float!
  description: String!
  images: [ProductImages!]!
  sizes: [ProductSizes!]!
  orientation: Orientation!
  clothingType: ClothingType!
}
input ProductImages {
  url: String!
}
input ProductSizes {
  stock: Int!
  size: ClothingSizes!
}

enum PermissionType {
  ADMIN
  BASIC
}

enum Orientation {
  NONE
  MASCULINE
  FEMININE
  UNISEX
}

enum ClothingType {
  NONE
  SHORTS
  PANTS
  TSHIRT
  JACKET
  UNDERWEAR
}

enum ClothingSizes {
  XS
  S
  M
  L
  XL
  XXL
  XL3
  XL4
  XL5
  XL6
}
