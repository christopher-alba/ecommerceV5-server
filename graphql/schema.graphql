type Query {
  product(id: ID!): Product
  products: [Product]
  me: User
  cart(userId: ID!): Cart
  profile(userId: ID!): Profile!
  topPicks(maxCount: Int!): [Product]
}
type Mutation {
  createProduct(product: createProductInput!): Product!
  updateProduct(product: updateProductInput!): Product!
  deleteProduct(id: ID!): ID!
  register(
    username: String!
    password: String!
    permission: PermissionType!
  ): User
  login(username: String!, password: String!): User
  createCart(username: String!): Cart
  updateCart(products: [updateCartInput]!, userId: ID!): Cart
  createProfile(profile: createProfileInput!): Profile
  updateProfile(profile: updateProfileInput!): Profile
}
type Profile {
  userId: String!
  firstName: String
  lastName: String
  favouriteProducts: [favouriteProduct]
  profilePicture: String
}

type Cart {
  products: [CartProduct]!
  userId: ID!
}
type favouriteProduct {
  productId: ID!
}
type CartProduct {
  id: ID!
  productId: ID!
  name: String!
  price: Float!
  description: String!
  images: [ProductImagesOutput!]!
  orientation: Orientation!
  clothingType: ClothingType!
  size: ClothingSizes!
}
type Product {
  id: ID!
  name: String
  price: Float
  description: String
  images: [ProductImagesOutput]
  views: Int
  orientation: Orientation
  clothingType: ClothingType
  sizes: [ProductSizes]
}
type User {
  _id: ID!
  username: String!
  password: String!
  token: String
  permission: PermissionType
}
type ProductSizes {
  stock: Int!
  size: ClothingSizes!
}
type ProductImagesOutput {
  url: String!
}
input createProductInput {
  name: String!
  price: Float!
  description: String!
  images: [ProductImages!]!
  sizes: [ProductSizesInput!]!
  orientation: Orientation!
  clothingType: ClothingType!
}

input updateProductInput {
  id: ID!
  name: String
  price: Float
  description: String
  images: [ProductImages]
  sizes: [ProductSizesInput]
  orientation: Orientation
  clothingType: ClothingType
  views: Int
}

input createProfileInput {
  userId: ID!
}
input updateProfileInput {
  userId: ID!
  firstName: String
  lastName: String
  favouriteProducts: [favouriteProductInput]
  profilePicture: String
}
input favouriteProductInput {
  productId: ID!
}
input updateCartInput {
  productId: ID
  name: String
  price: Float
  description: String
  images: [ProductImages!]!
  orientation: Orientation
  clothingType: ClothingType
  size: ClothingSizes
}

input ProductImages {
  url: String!
}

input ProductSizesInput {
  stock: Int!
  size: ClothingSizes!
}

enum PermissionType {
  ADMIN
  BASIC
}

enum Orientation {
  MASCULINE
  FEMININE
  UNISEX
}

enum ClothingType {
  SHORTS
  PANTS
  TSHIRTS
  JACKETS
}

enum ClothingSizes {
  XS
  S
  M
  L
  XL
  XXL
  XL3
  XL4
  XL5
  XL6
}
